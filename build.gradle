group 'com.sample.team'

task wrapper(type: Wrapper) { gradleVersion = '2.9' }

buildscript {
	repositories {
		jcenter()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
	}
	dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE") }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
}

dependencies {
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-jdbc:1.2.4.RELEASE')
	compile('org.apache.commons:commons-lang3:3.4')
	compile('org.apache.poi:poi:3.12')
	compile('org.apache.poi:poi-ooxml:3.12')
	compile('commons-cli:commons-cli:1.3')
	compile('org.springframework.boot:spring-boot-starter-batch:1.2.4.RELEASE')
	compile('org.springframework.boot:spring-boot-configuration-processor:1.2.5.RELEASE')
	compile('org.springframework.batch:spring-batch-integration:3.0.4.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('mysql:mysql-connector-java:5.1.36')
	compile('org.springframework.batch:spring-batch-test:3.0.5.RELEASE')
	runtime('org.hsqldb:hsqldb')
	runtime('com.h2database:h2:1.4.187')
	testCompile('org.springframework.boot:spring-boot-starter-test:1.2.4.RELEASE')
	testCompile('org.springframework:spring-test:4.1.7.RELEASE')
	testCompile('com.github.springtestdbunit:spring-test-dbunit:1.2.1')
	testCompile('org.dbunit:dbunit:2.4.9')
	testCompile("org.exparity:hamcrest-date:1.1.0")
	testCompile('org.mockito:mockito-core:1.10.19')
	testCompile group: 'junit', name: 'junit', version: '4.+'
}

bootRun {
	if (project.hasProperty('args') ) {
		arg project.args.split('\\s+')
	}
}

jar {
	from sourceSets.main.allSource
	baseName = 'Intake'
}

uploadArchives {
	repositories {
		flatDir { dirs 'repos' }
	}
}